[
  {
    "type": "function",
    "name": "getContractAddress",
    "inputs": [
      {
        "name": "contractConfig",
        "type": "tuple",
        "internalType": "struct ContractCreationConfig",
        "components": [
          {
            "name": "contractAdmin",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "contractURI",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "contractName",
            "type": "string",
            "internalType": "string"
          }
        ]
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "address"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "getContractWithAdditionalAdminsAddress",
    "inputs": [
      {
        "name": "contractConfig",
        "type": "tuple",
        "internalType": "struct ContractWithAdditionalAdminsCreationConfig",
        "components": [
          {
            "name": "contractAdmin",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "contractURI",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "contractName",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "additionalAdmins",
            "type": "address[]",
            "internalType": "address[]"
          }
        ]
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "address"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "premintV2WithSignerContract",
    "inputs": [
      {
        "name": "contractConfig",
        "type": "tuple",
        "internalType": "struct ContractCreationConfig",
        "components": [
          {
            "name": "contractAdmin",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "contractURI",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "contractName",
            "type": "string",
            "internalType": "string"
          }
        ]
      },
      {
        "name": "premintConfig",
        "type": "tuple",
        "internalType": "struct PremintConfigV2",
        "components": [
          {
            "name": "tokenConfig",
            "type": "tuple",
            "internalType": "struct TokenCreationConfigV2",
            "components": [
              {
                "name": "tokenURI",
                "type": "string",
                "internalType": "string"
              },
              {
                "name": "maxSupply",
                "type": "uint256",
                "internalType": "uint256"
              },
              {
                "name": "maxTokensPerAddress",
                "type": "uint64",
                "internalType": "uint64"
              },
              {
                "name": "pricePerToken",
                "type": "uint96",
                "internalType": "uint96"
              },
              {
                "name": "mintStart",
                "type": "uint64",
                "internalType": "uint64"
              },
              {
                "name": "mintDuration",
                "type": "uint64",
                "internalType": "uint64"
              },
              {
                "name": "royaltyBPS",
                "type": "uint32",
                "internalType": "uint32"
              },
              {
                "name": "payoutRecipient",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "fixedPriceMinter",
                "type": "address",
                "internalType": "address"
              },
              {
                "name": "createReferral",
                "type": "address",
                "internalType": "address"
              }
            ]
          },
          {
            "name": "uid",
            "type": "uint32",
            "internalType": "uint32"
          },
          {
            "name": "version",
            "type": "uint32",
            "internalType": "uint32"
          },
          {
            "name": "deleted",
            "type": "bool",
            "internalType": "bool"
          }
        ]
      },
      {
        "name": "signature",
        "type": "bytes",
        "internalType": "bytes"
      },
      {
        "name": "quantityToMint",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "mintArguments",
        "type": "tuple",
        "internalType": "struct MintArguments",
        "components": [
          {
            "name": "mintRecipient",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "mintComment",
            "type": "string",
            "internalType": "string"
          },
          {
            "name": "mintRewardsRecipients",
            "type": "address[]",
            "internalType": "address[]"
          }
        ]
      },
      {
        "name": "firstMinter",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "signerContract",
        "type": "address",
        "internalType": "address"
      }
    ],
    "outputs": [
      {
        "name": "result",
        "type": "tuple",
        "internalType": "struct PremintResult",
        "components": [
          {
            "name": "contractAddress",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "tokenId",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "createdNewContract",
            "type": "bool",
            "internalType": "bool"
          }
        ]
      }
    ],
    "stateMutability": "payable"
  }
]